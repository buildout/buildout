name: Run tests

on:
  push:
  pull_request:
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ubuntu:
    name: Ubuntu
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        python-version: ["3.10"]
        setuptools-version: ["75.1.0"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: Cache eggs
      uses: actions/cache@v4
      with:
        path: eggs
        key: ${{ matrix.os }}-${{ matrix.python-version }}-eggs
    - name: Run tests
      env:
        # When you install packages, you see far too many setuptools warnings.
        # They drown out useful output, so ignore all warnings.
        PYTHONWARNINGS: ignore
        PYTHON_VERSION: ${{matrix.python-version}}
        # PIP_VERSION: ${{matrix.pip-version}}
        SETUPTOOLS_VERSION: ${{matrix.setuptools-version}}
      run: make

  mac:
    name: Mac
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        python-version: ["3.10"]
        setuptools-version: ["75.1.0"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: Cache eggs
      uses: actions/cache@v4
      with:
        path: eggs
        key: ${{ matrix.os }}-${{ matrix.python-version }}-eggs
    - name: Run tests
      env:
        PYTHONWARNINGS: ignore
        PYTHON_VERSION: ${{matrix.python-version}}
        # PIP_VERSION: ${{matrix.pip-version}}
        SETUPTOOLS_VERSION: ${{matrix.setuptools-version}}
      run: make

  windows:
    name: Windows
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: ["3.10"]
        setuptools-version: ["75.1.0"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: Cache eggs
      uses: actions/cache@v4
      with:
        path: eggs
        key: ${{ matrix.os }}-${{ matrix.python-version }}-eggs
    - name: Run tests
      env:
        PYTHONWARNINGS: ignore
        PYTHON_VERSION: ${{matrix.python-version}}
        # PIP_VERSION: ${{matrix.pip-version}}
        SETUPTOOLS_VERSION: ${{matrix.setuptools-version}}
        # Defining temporary directories is needed on Windows for
        # test_all.TestEasyInstall.test_move_to_eggs_dir_and_compile
        TMPDIR: C:\tmp
        TMP: C:\tmp
        TEMP: C:\tmp
      run: make

  generate-scripts:
    name: generate scripts - Python ${{ matrix.python-version }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      matrix:
        package: [zest.releaser, pyspf]
        python-version: ["3.10"]
        os: ["ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Setup buildout virtualenv
      run: |
        make -f .github/workflows/Makefile-scripts sandbox/bin/buildout
    - name: Run buildout
      env:
        PYTHONWARNINGS: ignore
        PACKAGE: ${{matrix.package}}
        PYTHON_VERSION: ${{matrix.python-version}}
      run: |
        sandbox/bin/buildout -v -c .github/workflows/scripts-${PYTHON_VERSION}.cfg annotate buildout
        sandbox/bin/buildout -c .github/workflows/scripts-${PYTHON_VERSION}.cfg
    - name: Check eggs
      run: |
        ls -al sandbox/eggs
        ls -al sandbox/downloads/dist
