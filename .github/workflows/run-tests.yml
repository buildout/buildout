name: Run tests

on:
  push:
    paths-ignore:
      - '.circleci/**'
  pull_request:
    paths-ignore:
      - '.circleci/**'
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ubuntu-3_8:
    name: on Ubuntu machine - Python 3.8
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache eggs
      uses: actions/cache@v3
      with:
        path: eggs
        key: ${{ matrix.os }}-${{ matrix.python-version }}-eggs
    - name: Run tests
      env:
        TMPDIR: ${{ env.HOME }}/AppData/Local/Temp
        TMP: ${{ env.HOME }}/AppData/Local/Temp
        TEMP: ${{ env.HOME }}/AppData/Local/Temp
        BUILD_TYPE: bare_machines
      run: |
        echo $TMPDIR
        ./ci_build.sh

  generate-scripts-py2:
    name: generate scripts - Python ${{ matrix.python-version }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      matrix:
        package: [zest.releaser, pyspf]
        python-version: ["2.7"]
        os: ["ubuntu-20.04"]
    runs-on: ${{ matrix.os }}
    container:
      image: python:2.7.18-buster
    steps:
    - uses: actions/checkout@v4
    - name: Setup buildout virtualenv
      run: |
        make -f .github/workflows/Makefile-scripts sandbox/bin/buildout
    - name: Run buildout
      env:
        PACKAGE: ${{matrix.package}}
        PYTHON_VERSION: ${{matrix.python-version}}
      run: |
        sandbox/bin/buildout -v -c .github/workflows/scripts-${PYTHON_VERSION}.cfg annotate buildout
        sandbox/bin/buildout -c .github/workflows/scripts-${PYTHON_VERSION}.cfg
    - name: Check eggs
      run: |
        ls -al sandbox/eggs
        ls -al sandbox/downloads/dist

  generate-scripts:
    name: generate scripts - Python ${{ matrix.python-version }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      max-parallel: 4
      matrix:
        package: [zest.releaser, pyspf]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: ["ubuntu-22.04"]
        include:
          - os: "ubuntu-20.04"
            python-version: "3.6"
            package: zest.releaser
          - os: "ubuntu-20.04"
            python-version: "3.6"
            package: pyspf
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup buildout virtualenv
      run: |
        make -f .github/workflows/Makefile-scripts sandbox/bin/buildout
    - name: Run buildout
      env:
        PACKAGE: ${{matrix.package}}
        PYTHON_VERSION: ${{matrix.python-version}}
      run: |
        sandbox/bin/buildout -v -c .github/workflows/scripts-${PYTHON_VERSION}.cfg annotate buildout
        sandbox/bin/buildout -c .github/workflows/scripts-${PYTHON_VERSION}.cfg
    - name: Check eggs
      run: |
        ls -al sandbox/eggs
        ls -al sandbox/downloads/dist

  python-runners-27:
    needs: generate-scripts
    name: on ${{ matrix.os }} machine - Python ${{ matrix.python-version }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      matrix:
        python-version: ["2.7"]
        os: ["ubuntu-20.04"]
    runs-on: ${{ matrix.os }}
    container:
      image: python:2.7.18-buster
    steps:
    - uses: actions/checkout@v4
    - name: Cache eggs
      uses: actions/cache@v3
      with:
        path: eggs
        key: ${{ matrix.os }}-${{ matrix.python-version }}-eggs
    - name: Run tests
      env:
        TMPDIR: ${{ env.HOME }}/AppData/Local/Temp
        TMP: ${{ env.HOME }}/AppData/Local/Temp
        TEMP: ${{ env.HOME }}/AppData/Local/Temp
        BUILD_TYPE: bare_machines
      run: |
        echo $TMPDIR
        ./ci_build.sh

  python-runners:
    needs: generate-scripts
    name: on ${{ matrix.os }} machine - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: ["ubuntu-22.04"]
        include:
          # 3.5 gives a certificate problem getting a pip version from PyPI.
          # - os: "ubuntu-20.04"
          #   python-version: "3.5"
          - os: "ubuntu-20.04"
            python-version: "3.6"
          # excludes 3.11 on macos as long as I cannot understand how to fix it
          # - os: macos-latest
          #   python-version: 3.11
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache eggs
      uses: actions/cache@v3
      with:
        path: eggs
        key: ${{ matrix.os }}-${{ matrix.python-version }}-eggs
    - name: Run tests
      env:
        TMPDIR: ${{ env.HOME }}/AppData/Local/Temp
        TMP: ${{ env.HOME }}/AppData/Local/Temp
        TEMP: ${{ env.HOME }}/AppData/Local/Temp
        BUILD_TYPE: bare_machines
      run: |
        echo $TMPDIR
        ./ci_build.sh

  debian-containers:
    needs: python-runners
    name: in Debian container - Python ${{ matrix.python-version }}
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # 3.5 and 3.6 fail during 'make PYTHON_VER=3.x build'
        # See https://github.com/buildout/buildout/actions/runs/9555363465
        python-version: ["2.7", "3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: in container with Python ${{ matrix.python-version }}
      env:
        PYTHON_VER: ${{matrix.python-version}}
        BUILD_TYPE: debian_containers
      run: |
        ./ci_build.sh

  # All centos-containers fail really early:
  # Error: Failed to download metadata for repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist
  # centos-containers:
  #   needs: python-runners
  #   name: in CentOS container - Python ${{ matrix.python-version }}
  #   if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Test in container with Python ${{ matrix.python-version }}
  #     env:
  #       PYTHON_VER: ${{matrix.python-version}}
  #       BUILD_TYPE: centos_containers
  #     run: |
  #       ./ci_build.sh


  # debian-system fails early with:
  # RuntimeError: Failed to install pip.
  # debian-system:
  #   needs: python-runners
  #   name: in Debian container with system Python
  #   if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.9"]
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Test in container with system Python
  #     env:
  #       BUILD_TYPE: debian_sys_container
  #     run: |
  #       ./ci_build.sh
